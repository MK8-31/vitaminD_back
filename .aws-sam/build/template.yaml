Transform: AWS::Serverless-2016-10-31
Resources:
  Api:
    Type: AWS::Serverless::Api
    Properties:
      Name:
        Fn::Sub:
        - ${ResourceName} From Stack ${AWS::StackName}
        - ResourceName: Api
      StageName: Prod
      DefinitionBody:
        openapi: '3.0'
        info: {}
        paths:
          /:
            post:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri:
                  Fn::Sub: arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PostFunction.Arn}/invocations
              responses: {}
            delete:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri:
                  Fn::Sub: arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DeleteFunction.Arn}/invocations
              responses: {}
          /{groupName}:
            get:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri:
                  Fn::Sub: arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetFunction.Arn}/invocations
              responses: {}
      EndpointConfiguration: REGIONAL
      TracingEnabled: true
  PostFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description:
        Fn::Sub:
        - Stack ${AWS::StackName} Function ${ResourceName}
        - ResourceName: PostFunction
      CodeUri: PostFunction
      Handler: main
      Runtime: go1.x
      MemorySize: 3008
      Timeout: 30
      Tracing: Active
      Environment:
        Variables:
          USERGROUP_TABLE_NAME:
            Ref: userGroup
          USERGROUP_TABLE_ARN:
            Fn::GetAtt:
            - userGroup
            - Arn
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: userGroup
      Events:
        ApiPOST:
          Type: Api
          Properties:
            Path: /
            Method: POST
            RestApiId:
              Ref: Api
    Metadata:
      SamResourceId: PostFunction
  PostFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Retain
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${PostFunction}
  GetFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description:
        Fn::Sub:
        - Stack ${AWS::StackName} Function ${ResourceName}
        - ResourceName: GetFunction
      CodeUri: GetFunction
      Handler: main
      Runtime: go1.x
      MemorySize: 3008
      Timeout: 30
      Tracing: Active
      Environment:
        Variables:
          USERGROUP_TABLE_NAME:
            Ref: userGroup
          USERGROUP_TABLE_ARN:
            Fn::GetAtt:
            - userGroup
            - Arn
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: userGroup
      Events:
        ApiGETgroupName:
          Type: Api
          Properties:
            Path: /{groupName}
            Method: GET
            RestApiId:
              Ref: Api
    Metadata:
      SamResourceId: GetFunction
  GetFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Retain
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${GetFunction}
  userGroup:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: user_name
        AttributeType: S
      - AttributeName: group_name
        AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
      - AttributeName: user_name
        KeyType: HASH
      - AttributeName: group_name
        KeyType: RANGE
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
  DeleteFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description:
        Fn::Sub:
        - Stack ${AWS::StackName} Function ${ResourceName}
        - ResourceName: DeleteFunction
      CodeUri: DeleteFunction
      Handler: main
      Runtime: go1.x
      MemorySize: 3008
      Timeout: 30
      Tracing: Active
      Events:
        ApiDELETE:
          Type: Api
          Properties:
            Path: /
            Method: DELETE
            RestApiId:
              Ref: Api
      Environment:
        Variables:
          USERGROUP_TABLE_NAME:
            Ref: userGroup
          USERGROUP_TABLE_ARN:
            Fn::GetAtt:
            - userGroup
            - Arn
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: userGroup
    Metadata:
      SamResourceId: DeleteFunction
  DeleteFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Retain
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${DeleteFunction}
